variables:
  TIMESTAMP: $(date +%s)
  CI_DATABASE_NAME: balticrobo_test_$(date +%s)
  APP_ENV: test
  APP_SECRET: 7cbd4f1718b779f367516a8d917b6a29
  DATABASE_URL: mysql://${CI_DATABASE_USER}:${CI_DATABASE_PASSWORD}@127.0.0.1:3306/${CI_DATABASE_NAME}

stages:
  - Build (test)
  - Validate
  - Test
  - Quality analyze
  - Build (deploy)
  - Deploy

.common:
  tags: &tags_definition
    - php
    - node
  cache: &cache_definition
    paths:
      - vendor
      - node_modules
    policy: pull

Build for test:
  stage: Build (test)
  tags: *tags_definition
  script:
    - composer install
    - yarn install
  cache:
    paths:
      - vendor
      - node_modules
    policy: pull-push

Lint Yaml:
  stage: Validate
  tags: *tags_definition
  script:
    - bin/console lint:yaml config
    - bin/console lint:yaml translations
  cache: *cache_definition

Lint Twig:
  stage: Validate
  tags: *tags_definition
  script:
    - bin/console lint:twig templates
  cache: *cache_definition

PHP_CodeSniffer:
  stage: Validate
  tags: *tags_definition
  script:
    - vendor/bin/phpcs -p src
  allow_failure: true
  cache: *cache_definition

PHP-CS-Fixer:
  stage: Validate
  tags: *tags_definition
  script:
    - vendor/bin/php-cs-fixer fix src --dry-run --diff -vvv
  allow_failure: true
  cache: *cache_definition

Composer Packages:
  stage: Validate
  tags: *tags_definition
  script:
    - composer outdated
  allow_failure: true
  cache: *cache_definition

NPM Packages:
  stage: Validate
  tags: *tags_definition
  script:
    - yarn outdated
  allow_failure: true
  cache: *cache_definition

Tests:
  stage: Test
  tags: *tags_definition
  script:
    - echo ${TIMESTAMP}
    - echo ${CI_DATABASE_NAME}
    - echo ${DATABASE_URL}

Build prod:
  stage: Build (deploy)
  tags: *tags_definition
  only:
    - master
    - develop
  artifacts:
    name: build
    expire_in: 1 week
    paths:
      - dist/
  variables:
    APP_ENV: prod
  script:
    - composer install --no-dev --optimize-autoloader
    - bin/console assets:install
    - yarn install
    - node assets.config.js
    - yarn build
    - mkdir -p dist
    - cp -r bin config public src templates translations vendor composer.json dist

Deploy develop:
  stage: Deploy
  tags: *tags_definition
  only:
    - master
    - develop
  environment:
    name: staging
  variables:
    DEPLOY_HOST: $DEVELOP_HOST
    DEPLOY_DIRECTORY: $DEVELOP_DIRECTORY
  script:
    - 'echo User-agent: \* > public/robots.txt'
    - 'echo Disallow: / >> public/robots.txt'
    - rsync -razup --delete --exclude "var" --exclude ".env" --rsh="ssh -o BatchMode=yes -o StrictHostKeyChecking=no"
      . ${DEVELOP_HOST}:${DEVELOP_DIRECTORY}
    - ssh -o StrictHostKeyChecking=no ${DEVELOP_HOST} "
      php ${DEVELOP_DIRECTORY}/bin/console cache:clear &&
      php ${DEVELOP_DIRECTORY}/bin/console doctrine:migrations:migrate --no-interaction"
